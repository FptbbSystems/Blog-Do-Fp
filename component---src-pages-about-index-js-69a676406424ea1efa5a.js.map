{"version":3,"sources":["webpack:///./src/pages/about/index.module.less","webpack:///./src/pages/about/index.js"],"names":["module","exports","aboutPropTypes","data","PropTypes","shape","profilePhoto","childImageSharp","fluid","object","isRequired","flagIt","fixed","flagEn","skillIcons","toolIcons","About","render","this","props","title","description","path","className","style","container","photo","content","href","Utils","resolvePageUrl","display","margin","React","Component","imageListPropTypes","edges","arrayOf","node","name","string","query","iconsNameMap","css","html","jquery","nodejs","vuejs","gruntjs"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,UAAY,iCAAiC,MAAQ,6BAA6B,QAAU,+BAA+B,eAAiB,sCAAsC,YAAc,qC,+WCUrMC,EAAiB,CAC5BC,KAAMC,IAAUC,MAAM,CACpBC,aAAcF,IAAUC,MAAM,CAC5BE,gBAAiBH,IAAUC,MAAM,CAC/BG,MAAOJ,IAAUK,OAAOC,aACvBA,aACFA,WACHC,OAAQP,IAAUC,MAAM,CACtBE,gBAAiBH,IAAUC,MAAM,CAC/BO,MAAOR,IAAUK,OAAOC,eAG5BG,OAAQT,IAAUC,MAAM,CACtBE,gBAAiBH,IAAUC,MAAM,CAC/BO,MAAOR,IAAUK,OAAOC,eAG5BI,WAAYV,IAAUK,OAAOC,WAC7BK,UAAWX,IAAUK,OAAOC,cAI1BM,E,kGAGJC,OAAA,WAAU,IAAD,EAC+CC,KAAKC,MAAMhB,KAA3DG,EADC,EACDA,aAAcK,EADb,EACaA,OADb,EACqBG,WADrB,EACiCC,UACxC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEK,MAAM,QACNC,YAAY,mCACZC,KAAK,UAEP,yBAAKC,UAAWC,IAAMC,WACpB,yBAAKF,UAAWC,IAAME,OACpB,kBAAC,IAAD,CAAKlB,MAAOF,EAAaC,gBAAgBC,SAE3C,yBAAKe,UAAWC,IAAMG,SACpB,mDACA,qDACA,iEACA,uBAAGC,KAAMC,IAAMC,eAAe,MAAO,KAAM,UACzC,kBAAC,IAAD,CACElB,MAAOD,EAAOJ,gBAAgBK,MAC9BY,MAAO,CAAEO,QAAS,QAASC,OAAQ,WAGvC,8QACgP,6BAC9O,uBAAGJ,KAAK,6BAAR,gBAAoD,6BACpD,uBAAGA,KAAK,6BAAR,UAA8C,6BAC9C,uBAAGA,KAAK,8DAAR,iB,GA9BMK,IAAMC,WAuCbC,EAAqB,CAChCC,MAAOhC,IAAUiC,QACfjC,IAAUC,MAAM,CACdiC,KAAMlC,IAAUC,MAAM,CACpBkC,KAAMnC,IAAUoC,OAAO9B,WACvBH,gBAAiBH,IAAUC,MAAM,CAC/BO,MAAOR,IAAUK,OAAOC,aACvBA,aACFA,cAELA,YA4BS+B,GAzBWR,IAAMC,UAyBZ,cA2CLQ,EAAe,CAC1BC,IAAK,MACLC,KAAM,OACNC,OAAQ,SACRC,OAAQ,UACRC,MAAO,SACPC,QAAS,YAGIhC","file":"component---src-pages-about-index-js-69a676406424ea1efa5a.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"index-module--container--1Qco9\",\"photo\":\"index-module--photo--6zcpX\",\"content\":\"index-module--content--2qSIH\",\"iconsContainer\":\"index-module--iconsContainer--1JLyf\",\"iconWrapper\":\"index-module--iconWrapper--1IEjp\"};","/* Vendor imports */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n/* App imports */\nimport Layout from '../../components/layout'\nimport SEO from '../../components/seo'\nimport Utils from '../../utils'\nimport style from './index.module.less'\n\nexport const aboutPropTypes = {\n  data: PropTypes.shape({\n    profilePhoto: PropTypes.shape({\n      childImageSharp: PropTypes.shape({\n        fluid: PropTypes.object.isRequired,\n      }).isRequired,\n    }).isRequired,\n    flagIt: PropTypes.shape({\n      childImageSharp: PropTypes.shape({\n        fixed: PropTypes.object.isRequired,\n      }),\n    }),\n    flagEn: PropTypes.shape({\n      childImageSharp: PropTypes.shape({\n        fixed: PropTypes.object.isRequired,\n      }),\n    }),\n    skillIcons: PropTypes.object.isRequired,\n    toolIcons: PropTypes.object.isRequired,\n  }),\n}\n\nclass About extends React.Component {\n  static propTypes = aboutPropTypes\n\n  render() {\n    let { profilePhoto, flagIt, skillIcons, toolIcons } = this.props.data\n    return (\n      <Layout>\n        <SEO\n          title=\"Sobre\"\n          description=\"Um resumo basico sobre esse blog\"\n          path=\"about\"\n        />\n        <div className={style.container}>\n          <div className={style.photo}>\n            <Img fluid={profilePhoto.childImageSharp.fluid} />\n          </div>\n          <div className={style.content}>\n            <h1>Olá, eu sou o Fptbb</h1>\n            <h2>Desenvolvedor Backend</h2>\n            <p>For the English version click here</p>\n            <a href={Utils.resolvePageUrl('../', 'en', 'about')}>\n              <Img\n                fixed={flagIt.childImageSharp.fixed}\n                style={{ display: 'block', margin: 'auto' }}\n              />\n            </a>\n            <p>\n            Esse blog foi criado para publicações minhas, de meus projetos, ideias, estudos, etc, usando Gatsby, e hospedado no Github Pages, tambem usei um template como base, e modifiquei-o, seguem os links do template framework e ferramentas usadas.<br/>\n              <a href='https://pages.github.com/'>Github Pages</a><br/>\n              <a href='https://www.gatsbyjs.com/'>Gatsby</a><br/>\n              <a href='https://github.com/lgcolella/gatsby-starter-developer-blog'>Template</a>\n            </p>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const imageListPropTypes = {\n  edges: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        childImageSharp: PropTypes.shape({\n          fixed: PropTypes.object.isRequired,\n        }).isRequired,\n      }).isRequired,\n    })\n  ).isRequired,\n}\n\nclass ImageList extends React.Component {\n  static propTypes = imageListPropTypes\n\n  render = () => (\n    <div className={style.iconsContainer}>\n      {this.props.edges\n        .sort((edgeA, edgeB) =>\n          edgeA.node.name.toLowerCase() > edgeB.node.name.toLowerCase() ? 1 : -1\n        )\n        .map(({ node: { name, childImageSharp } }) => (\n          <div className={style.iconWrapper} key={name}>\n            <Img\n              fixed={childImageSharp.fixed}\n              alt={name + ' logo'}\n              title={name}\n            />\n            <label>\n              {iconsNameMap[name] ? iconsNameMap[name] : Utils.capitalize(name)}\n            </label>\n          </div>\n        ))}\n    </div>\n  )\n}\n\nexport const query = graphql`\n  {\n    profilePhoto: file(name: { eq: \"profile-photo\" }) {\n      childImageSharp {\n        fluid(maxWidth: 800) {\n          ...GatsbyImageSharpFluid_tracedSVG\n        }\n      }\n    }\n    flagIt: file(name: { eq: \"flag-it\" }) {\n      childImageSharp {\n        fixed(width: 50) {\n          ...GatsbyImageSharpFixed_tracedSVG\n        }\n      }\n    }\n    skillIcons: allFile(filter: { dir: { regex: \"/about/skills$/\" } }) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            fixed(width: 50) {\n              ...GatsbyImageSharpFixed_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    toolIcons: allFile(filter: { dir: { regex: \"/about/tools$/\" } }) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            fixed(width: 50) {\n              ...GatsbyImageSharpFixed_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`\n// Use to set specific icons names\nexport const iconsNameMap = {\n  css: 'CSS',\n  html: 'HTML',\n  jquery: 'JQuery',\n  nodejs: 'Node.js',\n  vuejs: 'Vue.js',\n  gruntjs: 'Grunt.js',\n}\n\nexport default About\n"],"sourceRoot":""}